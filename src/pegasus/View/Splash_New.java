/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pegasus.View;

import de.javasoft.plaf.synthetica.SyntheticaBlueSteelLookAndFeel;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.awt.Image;
import javax.swing.ImageIcon;

/**
 *
 * @author xp
 */
public class Splash_New extends javax.swing.JDialog {

    /**
     * Creates new form Splash_New
     */
    public Splash_New(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        try {
            Calendar cal = Calendar.getInstance();
            int Year = cal.get(Calendar.YEAR);
            int Month = cal.get(Calendar.MONTH);
            int Date = cal.get(Calendar.DATE);
            Month++;
            String month = "" + Month;
            String date = "" + Date;

            if (Month < 10) {
                month = "0" + Month;
            }
            if (Date < 10) {
                date = "0" + Date;
            }

            int Day = Integer.parseInt(Year + month + date);

            if (Day >= 20140101) {
                Web1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                Web2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                Web3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                Web4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        new Thread(new Runnable() {

            public void run() {

                for (int i = 0; i < 102; i++) {
                    try {
                        jProgressBar1.setIndeterminate(true);
                        Thread.sleep(60);

                        if (i == 100) {

                            UserDashboard sd = new UserDashboard();

                            jProgressBar1.setVisible(false);
                            dispose();
                            sd.setVisible(true);
//                            new Dashboard().setVisible(true);

                        }
                    } catch (Exception e) {
                    }
                }
            }
        }).start();
        this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        Web1 = new javax.swing.JLabel();
        Web2 = new javax.swing.JLabel();
        Web3 = new javax.swing.JLabel();
        Web4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Welcome To The Pegasuss v1.01");
        setResizable(false);

        jPanel1.setLayout(null);
        jPanel1.add(jProgressBar1);
        jProgressBar1.setBounds(-5, 203, 510, 10);

        Web1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Web1MousePressed(evt);
            }
        });
        jPanel1.add(Web1);
        Web1.setBounds(10, 10, 150, 30);

        Web2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Web2MousePressed(evt);
            }
        });
        jPanel1.add(Web2);
        Web2.setBounds(10, 44, 270, 16);

        Web3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Web3MousePressed(evt);
            }
        });
        jPanel1.add(Web3);
        Web3.setBounds(20, 80, 120, 80);

        Web4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Web4MousePressed(evt);
            }
        });
        jPanel1.add(Web4);
        Web4.setBounds(10, 165, 85, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new splash.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 500, 210);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void Web1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Web1MousePressed
    try {
        Calendar cal = Calendar.getInstance();
        int Year = cal.get(Calendar.YEAR);
        int Month = cal.get(Calendar.MONTH);
        int Date = cal.get(Calendar.DATE);
        Month++;
        String month = "" + Month;
        String date = "" + Date;

        if (Month < 10) {
            month = "0" + Month;
        }
        if (Date < 10) {
            date = "0" + Date;
        }

        int Day = Integer.parseInt(Year + month + date);

        if (Day >= 20140101) {
            if (Desktop.isDesktopSupported()) {
                Desktop desktop = Desktop.getDesktop();
                try {
                    URI uri = new URI("http://www.SankalpaSolutionssl.weebly.com");
                    desktop.browse(uri);
                } catch (IOException ex) {
                    ex.printStackTrace();
                } catch (URISyntaxException ex) {
                    ex.printStackTrace();
                }
            }

        }

    } catch (Exception e) {
        e.printStackTrace();
    }
}//GEN-LAST:event_Web1MousePressed

private void Web2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Web2MousePressed
    try {
        Calendar cal = Calendar.getInstance();
        int Year = cal.get(Calendar.YEAR);
        int Month = cal.get(Calendar.MONTH);
        int Date = cal.get(Calendar.DATE);
        Month++;
        String month = "" + Month;
        String date = "" + Date;

        if (Month < 10) {
            month = "0" + Month;
        }
        if (Date < 10) {
            date = "0" + Date;
        }

        int Day = Integer.parseInt(Year + month + date);

        if (Day >= 20140101) {
            if (Desktop.isDesktopSupported()) {
                Desktop desktop = Desktop.getDesktop();
                try {
                    URI uri = new URI("http://www.SankalpaSolutionssl.weebly.com");
                    desktop.browse(uri);
                } catch (IOException ex) {
                    ex.printStackTrace();
                } catch (URISyntaxException ex) {
                    ex.printStackTrace();
                }
            }

        }

    } catch (Exception e) {
        e.printStackTrace();
    }
}//GEN-LAST:event_Web2MousePressed

private void Web3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Web3MousePressed
    try {
        Calendar cal = Calendar.getInstance();
        int Year = cal.get(Calendar.YEAR);
        int Month = cal.get(Calendar.MONTH);
        int Date = cal.get(Calendar.DATE);
        Month++;
        String month = "" + Month;
        String date = "" + Date;

        if (Month < 10) {
            month = "0" + Month;
        }
        if (Date < 10) {
            date = "0" + Date;
        }

        int Day = Integer.parseInt(Year + month + date);

        if (Day >= 20140101) {
            if (Desktop.isDesktopSupported()) {
                Desktop desktop = Desktop.getDesktop();
                try {
                    URI uri = new URI("http://www.SankalpaSolutionssl.weebly.com");
                    desktop.browse(uri);
                } catch (IOException ex) {
                    ex.printStackTrace();
                } catch (URISyntaxException ex) {
                    ex.printStackTrace();
                }
            }

        }

    } catch (Exception e) {
        e.printStackTrace();
    }
}//GEN-LAST:event_Web3MousePressed

private void Web4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Web4MousePressed
    try {
        Calendar cal = Calendar.getInstance();
        int Year = cal.get(Calendar.YEAR);
        int Month = cal.get(Calendar.MONTH);
        int Date = cal.get(Calendar.DATE);
        Month++;
        String month = "" + Month;
        String date = "" + Date;

        if (Month < 10) {
            month = "0" + Month;
        }
        if (Date < 10) {
            date = "0" + Date;
        }

        int Day = Integer.parseInt(Year + month + date);

        if (Day >= 20140101) {
            if (Desktop.isDesktopSupported()) {
                Desktop desktop = Desktop.getDesktop();
                try {
                    URI uri = new URI("http://www.SankalpaSolutionssl.weebly.com");
                    desktop.browse(uri);
                } catch (IOException ex) {
                    ex.printStackTrace();
                } catch (URISyntaxException ex) {
                    ex.printStackTrace();
                }
            }

        }

    } catch (Exception e) {
        e.printStackTrace();
    }
}//GEN-LAST:event_Web4MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Splash_New.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Splash_New.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Splash_New.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Splash_New.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {

                try {
                    UIManager.setLookAndFeel(new SyntheticaBlueSteelLookAndFeel());
                } catch (ParseException ex) {
                    Logger.getLogger(Splash_New.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(Splash_New.class.getName()).log(Level.SEVERE, null, ex);
                }
                Splash_New dialog = new Splash_New(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Web1;
    private javax.swing.JLabel Web2;
    private javax.swing.JLabel Web3;
    private javax.swing.JLabel Web4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables
}
